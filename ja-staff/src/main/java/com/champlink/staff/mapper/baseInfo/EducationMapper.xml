<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.champlink.staff.dao.baseInfo.EducationMapper">
  <resultMap id="BaseResultMap" type="com.champlink.common.domain.staff.baseInfo.Education">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="row_id" jdbcType="BIGINT" property="rowId" />
    <result column="staff_id" jdbcType="BIGINT" property="staffId" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="major_name" jdbcType="VARCHAR" property="majorName" />
    <result column="entrance_time" jdbcType="TIMESTAMP" property="entranceTime" />
    <result column="graduate_time" jdbcType="TIMESTAMP" property="graduateTime" />
    <result column="education" jdbcType="BIGINT" property="education" />
    <result column="degree" jdbcType="BIGINT" property="degree" />
    <result column="graduation_situation" jdbcType="BIGINT" property="graduationSituation" />
    <result column="schooling_documents_type" jdbcType="BIGINT" property="schoolingDocumentsType" />
    <result column="degree_country" jdbcType="BIGINT" property="degreeCountry" />
    <result column="learning_style" jdbcType="BIGINT" property="learningStyle" />
    <result column="is_highest_degree" jdbcType="BIGINT" property="isHighestDegree" />
    <result column="is_highest_education" jdbcType="BIGINT" property="isHighestEducation" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  
  <!-- 添加-->
  <insert id="insertEducation" parameterType="com.champlink.common.domain.staff.baseInfo.Education">
      insert into stf_education
        (staff_id, school_name, major_name, entrance_time, graduate_time, education, degree, graduation_situation, 
        schooling_documents_type, degree_country, learning_style, is_highest_degree, is_highest_education)
      values 
        (#{staffId}, #{schoolName}, #{majorName}, #{entranceTime}, #{graduateTime}, #{education}, #{degree}, #{graduationSituation}, 
        #{schoolingDocumentsType}, #{degreeCountry}, #{learningStyle}, #{isHighestDegree}, #{isHighestEducation})
  </insert>
  
  <!-- 更新 -->
  <update id="updateEducation" parameterType="com.champlink.common.domain.staff.baseInfo.Education">
    update stf_education
    <set>
        <if test="staffId != null">
            staff_id = #{staffId},
        </if>
        <if test="schoolName != null">
            school_name = #{schoolName},
        </if>
        <if test="majorName != null">
            major_name = #{majorName},
        </if>
        <if test="entranceTime != null">
            entrance_time = #{entranceTime},
        </if>
        <if test="graduateTime != null">
            graduate_time = #{graduateTime},
        </if>
        <if test="education != null">
            education = #{education},
        </if>
        <if test="degree != null">
            degree = #{degree},
        </if>
        <if test="graduationSituation != null">
            graduation_situation = #{graduationSituation},
        </if>
        <if test="schoolingDocumentsType != null">
            schooling_documents_type = #{schoolingDocumentsType},
        </if>
        <if test="degreeCountry != null">
            degree_country = #{degreeCountry},
        </if>
        <if test="learningStyle != null">
            learning_style = #{learningStyle},
        </if>
        <if test="isHighestDegree != null">
            is_highest_degree = #{isHighestDegree},
        </if>
        <if test="isHighestEducation != null">
            is_highest_education = #{isHighestEducation}
        </if>
    </set>
    where row_id = #{rowId}
  </update>
  
  <!-- 根据人员id删除 -->
  <delete id="delEducationListByStaffId">
    delete from stf_education where row_id = #{rowId}
  </delete>
  
  <!-- 根据人员id查询 -->
  <select id="queryEducationList" resultMap="BaseResultMap">
    select * 
    from stf_education
    where staff_id = #{staffId}
  </select>
  
  <select id="getByRowId" resultMap="BaseResultMap">
    select * 
    from stf_education
    where row_id = #{rowId}
  </select>
  
    <!-- 根据人员id删除 -->
  <delete id="delAllByStaffId">
    delete from stf_education where staff_id = #{staffId}
  </delete>
</mapper>