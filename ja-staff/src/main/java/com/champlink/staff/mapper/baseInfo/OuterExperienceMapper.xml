<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.champlink.staff.dao.baseInfo.OuterExperienceMapper">
  <resultMap id="BaseResultMap" type="com.champlink.common.domain.staff.baseInfo.OuterExperience">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="row_id" jdbcType="BIGINT" property="rowId" />
    <result column="staff_id" jdbcType="BIGINT" property="staffId" />
    <result column="work_unit" jdbcType="VARCHAR" property="workUnit" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="proof_person_and_duty" jdbcType="VARCHAR" property="proofPersonAndDuty" />
    <result column="proof_contact" jdbcType="VARCHAR" property="proofContact" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  
  <!-- 添加 -->
  <insert id="insertOuterExperience" parameterType="com.champlink.common.domain.staff.baseInfo.OuterExperience">
      insert into stf_outer_experience
        (staff_id, work_unit,dept_name,position_name,start_date,end_date,proof_person_and_duty,proof_contact,salary)
      values 
        (#{staffId},#{workUnit},#{deptName},#{positionName},#{startDate},
        #{endDate},#{proofPersonAndDuty},#{proofContact},#{salary})
  </insert>
  
  <!-- 更新 -->
  <update id="updateOuterExperience" parameterType="com.champlink.common.domain.staff.baseInfo.OuterExperience">
    update stf_outer_experience
    <set>
        <if test="staffId != null">
            staff_id = #{staffId},
        </if>
        <if test="workUnit != null">
            work_unit = #{workUnit},
        </if>
        <if test="deptName != null">
            dept_name = #{deptName},
        </if>
        <if test="positionName != null">
            position_name = #{positionName},
        </if>
        start_date = #{startDate},
        end_date = #{endDate},
        <if test="proofPersonAndDuty != null">
            proof_person_and_duty = #{proofPersonAndDuty},
        </if>
        <if test="proofContact != null">
            proof_contact = #{proofContact},
        </if>
        <if test="salary != null">
            salary = #{salary}
        </if>
    </set>
    where row_id = #{rowId}
  </update>
  
  <!-- 根据人员id删除 -->
  <delete id="delOuterExperienceListByStaffId">
    delete from stf_outer_experience where row_id = #{rowId}
  </delete>
  
  <!-- 根据人员id查询 -->
  <select id="queryOuterExperienceList" resultMap="BaseResultMap">
    select * 
    from stf_outer_experience
    where staff_id = #{staffId}
  </select>
  
  <select id="getByRowId" resultMap="BaseResultMap">
    select * 
    from stf_outer_experience
    where row_id = #{rowId}
  </select>
  
    <!-- 根据人员id删除 -->
  <delete id="delAllByStaffId">
    delete from stf_outer_experience where staff_id = #{staffId}
  </delete>
  
</mapper>